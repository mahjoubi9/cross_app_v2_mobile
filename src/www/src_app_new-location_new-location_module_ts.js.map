{"version":3,"file":"src_app_new-location_new-location_module_ts.js","mappings":"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","sources":["./src/app/models/location.ts","./src/app/new-location/new-location-routing.module.ts","./src/app/new-location/new-location.module.ts","./src/app/new-location/new-location.page.ts","./src/app/new-location/new-location.page.html"],"sourcesContent":["export class location {\n  title: string;\n  city?: string;\n  country?: string;\n  Keywords?: string;\n  selected?: boolean;\n  timestamp?: number;\n  coordinates?: { latitude: number; longitude: number };\n  photo?: string[];\n\n\n  constructor() {\n    this.title = \"\";\n    this.city = \"\";\n    this.country = \"\";\n    this.Keywords = \"\";\n    this.selected = true;\n    this.timestamp = 0;\n    this.coordinates = {\"longitude\": 0, \"latitude\": 0};\n    this.photo = [];\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { NewLocationPage } from './new-location.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: NewLocationPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class NewLocationPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { NewLocationPageRoutingModule } from './new-location-routing.module';\n\nimport { NewLocationPage } from './new-location.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    NewLocationPageRoutingModule\n  ],\n  declarations: [NewLocationPage]\n})\nexport class NewLocationPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport {location} from \"../models/location\";\nimport {Geolocation} from \"@ionic-native/geolocation/ngx\";\nimport {LocationsService} from \"../services/locations.service\";\nimport {NavController} from \"@ionic/angular\";\nimport {Router} from \"@angular/router\";\n\n@Component({\n  selector: 'app-new-location',\n  templateUrl: './new-location.page.html',\n  styleUrls: ['./new-location.page.scss'],\n})\nexport class NewLocationPage implements OnInit {\npublic location:location = new location();\n  constructor(private router:Router,private navController:NavController,private geolocation:Geolocation,private locationService:LocationsService) { }\n\n  ngOnInit() {\n  }\n\n  onAddLocation() {\n    this.location.timestamp = new Date().getTime();\n    this.location.photo=[];\n    this.geolocation.getCurrentPosition().then((resp) => {\n      this.location.coordinates={\n        longitude: resp.coords.longitude,\n          latitude: resp.coords.latitude\n      }\n      this.locationService.addLocation(this.location);\n      console.log(this.location);\n      this.router.navigateByUrl(\"/menu/locations\");\n     // this.navController.back();\n    }).catch((error) => {\n      console.log('Error getting location', error);\n    });\n\n\nconsole.log(this.location);\n  }\n}\n","export default \"<ion-header [translucent]=\\\"true\\\">\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-button slot=\\\"start\\\">\\n      <ion-menu-button ></ion-menu-button>\\n    </ion-button>\\n    <ion-title>\\n      new Location\\n    </ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <form class=\\\"form\\\">\\n    <ion-list>\\n      <ion-item>\\n        <ion-label>Tilte : </ion-label>\\n        <ion-input type=\\\"text\\\" [(ngModel)]=\\\"location.title\\\" name=\\\"location.title\\\"></ion-input>\\n      </ion-item>\\n      <ion-item>\\n        <ion-label>City : </ion-label>\\n        <ion-input type=\\\"text\\\" [(ngModel)]=\\\"location.city\\\" name=\\\"location.city\\\"></ion-input>\\n      </ion-item>\\n      <ion-item>\\n        <ion-label>Country : </ion-label>\\n        <ion-input type=\\\"text\\\" [(ngModel)]=\\\"location.country\\\" name=\\\"location.country\\\"></ion-input>\\n      </ion-item>\\n      <ion-item>\\n        <ion-label>Keywords : </ion-label>\\n        <ion-input type=\\\"text\\\" [(ngModel)]=\\\"location.Keywords\\\" name=\\\"keywords\\\"></ion-input>\\n      </ion-item>\\n      <ion-item>\\n      <ion-button  (click)=\\\"onAddLocation()\\\">Save</ion-button>\\n        </ion-item>\\n    </ion-list>\\n  </form>\\n\\n</ion-content>\\n\";"],"names":[],"sourceRoot":"webpack:///"}